ruleorder: finding_center > masked_FCGR

################################################################################
### Part 0.1) Downloading part
################################################################################

rule download_genomes:
    output:
        "../data/genomes/{species}_genomes.fna"
    shell:
        "bash ../scripts/download_genomes.sh {wildcards.species} {output}"

rule download_features:
    output:
        "../data/factors/features/{species}_feature_table.txt"
    shell:
        "bash ../scripts/download_features.sh {wildcards.species} {output}"

rule download_genes:
    output:
        "../data/factors/genes/{species}_genes.gff"
    shell:
        "bash ../scripts/download_genes.sh {wildcards.species} {output}"

rule download_repeats:
    output:
        "../data/factors/repeats/{species}_repeats.txt"
    shell:
        "bash ../scripts/download_repeats.sh {wildcards.species} {output}"

rule download_rr:
    output:
        "../data/factors/recombination_rates/{species}_RR_spline.RData"
    shell:
        "bash ../scripts/download_repeats.sh {wildcards.species} {output}"

################################################################################
### Part 0.2) Extract and clean ranges
################################################################################

rule factor_proxies:
    input:
        "../data/genomes/{species}_genomes.fna",
        "../data/factors/repeats/{species}_repeats.txt",
        "../data/factors/features/{species}_feature_table.txt",
        "../data/factors/genes/{species}_genes.gff"
    output:
        "../data/following/factor_proxies/{species}/{factors}_proxies_done.txt"
    shell:
        "python3 ../scripts/factor_proxies.py {wildcards.factors} {input} \
        {output}"

rule extract_overlaps:
    input:
        "../data/genomes/{species}_genomes.fna"
    output:
        "../data/following/factor_proxies/overlaps/{species}_done.txt"
    threads:
        99
    shell:
        "python3 ../scripts/extract_overlaps.py {input} {threads} {output}"

rule clean_ranges:
    input:
        "../data/genomes/{species}_genomes.fna",
        "../data/following/factor_proxies/overlaps/{species}_done.txt"
    output:
        "../data/following/factor_proxies/cleaning/{species}_done.txt"
    threads:
        99
    shell:
        "python3 ../scripts/removing_overlaps.py {input} {threads} {output}"

rule extract_uncategorized:
    input:
        "../data/genomes/{species}_genomes.fna",
        "../data/following/factor_proxies/cleaning/{species}_done.txt"
    output:
        "../data/following/factor_proxies/uncategorized/{species}_done.txt"
    threads:
        99
    shell:
        "python3 ../scripts/extract_uncategorized.py {input} {threads} {output}"

rule factor_percentages:
    input:
        "../data/genomes/{species}_genomes.fna",
        "../data/following/factor_proxies/uncategorized/{species}_done.txt"
    output:
        "../files/factor_percentages/{windows}/{species}.txt"
    threads:
        99
    shell:
        "python3 ../scripts/factor_percentages.py {input} {wildcards.windows} \
        {output}"

rule filter_factors:
    input:
        "../files/factor_percentages/{windows}/{species}.txt"
    output:
        "../data/following/factor_filtered/{windows}/{species}_done.txt"
    threads:
        99
    shell:
        "python3 ../scripts/filter_by_percentages.py {input} \
        {wildcards.species} {output}"

################################################################################
### Part B) From ranges of masked factor to FCGR
################################################################################

rule masking:
    input:
        "../data/genomes/{species}_genomes.fna"
    output:
        "data/samples/{windows}_{n_samples}/{species}_{factors}_masked.fna"
    shell:
        "python3 scripts/masking_to_no_factor.py {wildcards.factors} \
            {wildcards.windows} {wildcards.n_samples} {input} {output}"

rule masked_CGR:
    input:
        "data/samples/{windows}_{n_samples}/{species}_{factors}_masked.fna"
    output:
        "data/following/CGRs/{windows}_{n_samples}/{species}_{factors}_masked_done.txt"
    threads:
        99
    shell:
        "python3 ../scripts/windowed_CGR.py {input} {wildcards.windows} \
            {wildcards.n_samples} {threads} {output}"

rule masked_FCGR:
    input:
        "data/following/CGRs/{windows}_{n_samples}/{species}_{factors}_masked_done.txt"
    output:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_{factors}_masked_FCGRs.txt"
    threads:
        99
    shell:
        "python3 ../scripts/windowed_FCGR.py {input} {wildcards.species} \
            {wildcards.windows} {wildcards.kmer} {wildcards.n_samples} \
            {threads} {output}"

rule finding_center:
    input:
        "../scaling/files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_FCGRs.txt",
        "../scaling/files/distances/manhattan/{windows}_{n_samples}_{kmer}/{species}_dist_matrix.RData"
    output:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_center_FCGRs.txt"
    shell:
        "python3 scripts/get_center_FCGRs.py {input} {output}"

rule masked_concatenating:
    input:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_{factors}_masked_FCGRs.txt",
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_center_FCGRs.txt"
    output:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_{factors}_masked_vs_center_FCGRs.txt"
    shell:
        "cat {input} >> {output}"

rule masked_FCGRs_dist:
    input:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_{factors}_masked_vs_center_FCGRs.txt"
    output:
        "files/distances/manhattan/{windows}_{n_samples}_{kmer}/{species}_{factors}_masked_vs_center_dist_matrix.RData"
    threads:
        99
    shell:
        "Rscript ../scripts/manhattan_distance.R {input} {output}"

################################################################################
### Part C) From pure factor FCGRs to pure factor vs center distance matrix
################################################################################

rule pure_concatenating:
    input:
        "../purifying/files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_{factors}_pure_FCGRs.txt",
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_center_FCGRs.txt"
    output:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_{factors}_pure_vs_center_FCGRs.txt"
    shell:
        "cat {input} >> {output}"

rule pure_FCGRs_dist:
    input:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_{factors}_pure_vs_center_FCGRs.txt"
    output:
        "files/distances/manhattan/{windows}_{n_samples}_{kmer}/{species}_{factors}_pure_vs_center_dist_matrix.RData"
    threads:
        99
    shell:
        "Rscript ../scripts/manhattan_distance.R {input} {output}"

################################################################################
### Part D) From sample FCGRs to sample vs sample center distance matrix
################################################################################

rule whole_concatenating:
    input:
        "../scaling/files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_FCGRs.txt",
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_center_FCGRs.txt"
    output:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_whole_vs_center_FCGRs.txt"
    shell:
        "cat {input} >> {output}"

rule whole_FCGRs_dist:
    input:
        "files/FCGRs/{windows}_{n_samples}_{kmer}/{species}_whole_vs_center_FCGRs.txt"
    output:
        "files/distances/manhattan/{windows}_{n_samples}_{kmer}/{species}_whole_vs_center_dist_matrix.RData"
    threads:
        99
    shell:
        "Rscript ../scripts/manhattan_distance.R {input} {output}"

################################################################################
### Part E) Using all the distance matrices to produce figure
################################################################################

rule boxplots:
    output:
        "files/results/{windows}_{n_samples}_{kmer}/{species}_boxplots_all_factors.png"
    shell:
        "Rscript scripts/boxplots_factor_center.R {output} {wildcards.windows}\
            {wildcards.kmer} {wildcards.species} {wildcards.n_samples}"
